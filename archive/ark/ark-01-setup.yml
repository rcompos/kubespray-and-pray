---
# Ansible for installing GlusterFS requirements on K8s cluster machines.

- hosts: 'kube-master'
  vars:
      #key: 'value'
      dir_target:            '{{ ansible_env.HOME }}/ark'
      ark_github_version:    'v0.9.11'
      #ark_minio_pvc_path:    '/.kubespray/inventory'
      ark_minio_pvc_file:    '00-minio-pv-claim.yaml'
      ark_minio_pvc_size:    300  # Gi
      ark_prereqs:           '00-prereqs.yaml'
      ark_minio_deployment:  '00-minio-deployment.yaml'
      ark_config:            '10-ark-config.yaml'
      ark_deployment:        '20-ark-deployment.yaml'
      restic_daemonset:      '30-restic-daemonset.yaml'
      restic_location:       'restic'
      ark_client_tgz:        'ark-v0.9.11-linux-amd64.tar.gz'
      ark_client_url:        'https://github.com/heptio/ark/releases/download/v0.9.11/ark-v0.9.11-linux-amd64.tar.gz'
      ark_namespace:         'heptio-ark'
      ark_file:              'ark-minio-nodeport.yaml'
  remote_user: solidfire
  become: true
  run_once: true
  environment:

  tasks:

  #- name: Role Facts
  #  set_fact:
  #    block_device: '/dev/sdb'

  - name: Copy kubeconfig
    shell: cp -a /etc/kubernetes/admin.conf /root/.kube/config
    ignore_errors: true

  - name: Clone Heptio Ark repository
    git:
      repo: 'https://github.com/heptio/ark'
      dest: "{{ dir_target }}"
      version: "{{ ark_github_version }}"
      force: yes

  - name: Copy pvc for ark minio
    # Edit PVC size through spec.resources.requests.storage
    copy:
      src:  "{{ ark_minio_pvc_file }}"
      dest: "{{ dir_target }}/examples/minio"
      mode: 0644

  - name: Modify ark minio pvc file
    lineinfile:
      dest: "{{ dir_target }}/examples/minio/{{ ark_minio_pvc_file }}"
      state: present
      regexp: '^      storage: 10Gi'
      line:   '      storage: {{ark_minio_pvc_size}}Gi'

  - name: Modify restic
    lineinfile:
      dest: "{{ dir_target }}/examples/minio/{{ ark_config }}"
      state: present
      regexp: '^.*# resticLocation: <YOUR_RESTIC_LOCATION>'
      line:    '  resticLocation: {{ restic_location }}' 

  - name: Create ark common
    command: "kubectl create -f {{ dir_target }}/examples/common/{{ ark_prereqs }}"
    ignore_errors: true

  - name: Create ark minio deploy 
    command: "kubectl create -f {{ dir_target }}/examples/minio/{{ ark_minio_deployment }}"
    ignore_errors: true

  - name: Wait for ark minio
    shell: "kubectl get svc --no-headers -n {{ ark_namespace }} minio 2>/dev/null | wc -l"
    register: wait_for_ark
    retries: 36
    delay: 5
    until: wait_for_ark.stdout >= 1

  - name: Create ark minio pvc
    command: "kubectl create -f {{ dir_target }}/examples/minio/{{ ark_minio_pvc_file }}"
    ignore_errors: true

  - name: Export Ark Minio yaml
    shell: kubectl get svc minio -n {{ ark_namespace }} -o yaml > "{{ ark_file }}"

  - name: Modify Ark Minio yaml service type
    lineinfile:
      dest: "{{ ark_file }}"
      regexp: '^  type: '
      line:    '  type: NodePort'

  - name: Change Ark Minio service to NodePort
    command: kubectl apply -f "{{ ark_file }}" --validate

  - name: Get Ark Minio port
    shell: kubectl get svc minio -n {{ ark_namespace }} -o yaml | grep '\ nodePort:' | cut -d ' ' -f6
    register: ark_port

  - name: Create restic daemonset
    command: "kubectl create -f {{ dir_target }}/examples/minio/{{ restic_daemonset }}"
    ignore_errors: true

  ##### Manual step required:  Create Minio bucket for restic called restic
